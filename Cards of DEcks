
import random

class Card:
    def __init__(self, suit, rank):
        self.suit = suit
        self.rank = rank

    def __str__(self):
        return f"{self.rank} of {self.suit}"

def create_deck():
    suits = ['Hearts', 'Spades', 'Clubs', 'Diamonds']
    ranks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King', 'Ace']
    deck = [Card(suit, rank) for suit in suits for rank in ranks]
    random.shuffle(deck)
    return deck

def deal_cards(deck, num_players):
    hands = {f"Player {i + 1}": [] for i in range(num_players)}
    while deck:
        for player in hands:
            if deck:
                hands[player].append(deck.pop())
    return hands

def calculate_points(hand):
    point_values = {str(i): i for i in range(2, 11)}
    point_values.update({'Jack': 10, 'Queen': 10, 'King': 10, 'Ace': 11})
    return sum(point_values[card.rank] for card in hand)

def display_hands(hands):
    for player, cards in hands.items():
        print(f"\n{player}'s Hand:")
        for card in cards:
            print(card)
        print(f"Points: {calculate_points(cards)}")

def determine_winner(hands):
    points = {player: calculate_points(cards) for player, cards in hands.items()}
    winner = max(points, key=points.get)
    return winner, points[winner]

def play_game():
    while True:
        try:
            num_players = int(input("Enter the number of players (2-4): "))
            if 2 <= num_players <= 4:
                break
            else:
                print("Please enter a number between 2 and 4.")
        except ValueError:
            print("Invalid input. Please enter a valid number.")

    deck = create_deck()
    hands = deal_cards(deck, num_players)
    display_hands(hands)

    winner, winner_points = determine_winner(hands)
    print(f"\nThe winner is {winner} with {winner_points} points!")

play_game()
